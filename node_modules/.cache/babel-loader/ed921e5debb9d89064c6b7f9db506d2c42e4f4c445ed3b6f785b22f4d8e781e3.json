{"ast":null,"code":"var _jsxFileName = \"/Users/krishsagar/Desktop/Priya Birthday/PriyaBirthdayFinal/pbirthday/src/Components/LetterViewer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LetterViewer = ({\n  fileName,\n  person\n}) => {\n  _s();\n  const [letterContent, setLetterContent] = useState('');\n  useEffect(() => {\n    // Function to fetch the letter content from a text file\n    const fetchLetterContent = async () => {\n      try {\n        const response = await fetch('/Assets/Letters/' + fileName + '.txt'); // Adjust the path accordingly\n        const text = await response.text();\n        setLetterContent(text);\n      } catch (error) {\n        console.error('Error fetching letter content:', error);\n      }\n    };\n    fetchLetterContent(); // Call the function\n  }, [fileName]);\n\n  // Tokenize the letter content by splitting it into an array of lines\n  const lines = letterContent.split('\\n');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontFamily: 'Arial, sans-serif',\n      fontSize: '16px',\n      lineHeight: '1.5',\n      padding: '20px',\n      maxHeight: '600px',\n      overflowY: 'auto'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        textAlign: 'center',\n        marginBottom: '20px',\n        alignSelf: 'flex-start'\n      },\n      children: [\"Letter from \", person]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), lines.map((line, index) =>\n    /*#__PURE__*/\n    // Render each line as a separate <p> tag with proper indentation\n    _jsxDEV(\"p\", {\n      style: {\n        textIndent: '30px',\n        margin: '10px 0',\n        whiteSpace: 'pre-wrap'\n      },\n      children: line\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(LetterViewer, \"wCehzO75MvlMiS69W/3YwJn9ByQ=\");\n_c = LetterViewer;\nexport default LetterViewer;\nvar _c;\n$RefreshReg$(_c, \"LetterViewer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","LetterViewer","fileName","person","_s","letterContent","setLetterContent","fetchLetterContent","response","fetch","text","error","console","lines","split","style","fontFamily","fontSize","lineHeight","padding","maxHeight","overflowY","children","textAlign","marginBottom","alignSelf","_jsxFileName","lineNumber","columnNumber","map","line","index","textIndent","margin","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/krishsagar/Desktop/Priya Birthday/PriyaBirthdayFinal/pbirthday/src/Components/LetterViewer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\n\nconst LetterViewer = ({ fileName, person }) => {\n  const [letterContent, setLetterContent] = useState('');\n\n  useEffect(() => {\n    // Function to fetch the letter content from a text file\n    const fetchLetterContent = async () => {\n      try {\n        const response = await fetch('/Assets/Letters/' + fileName + '.txt'); // Adjust the path accordingly\n        const text = await response.text();\n        setLetterContent(text);\n      } catch (error) {\n        console.error('Error fetching letter content:', error);\n      }\n    };\n\n    fetchLetterContent(); // Call the function\n  }, [fileName]);\n \n  // Tokenize the letter content by splitting it into an array of lines\n  const lines = letterContent.split('\\n');\n\n  return (\n    <div style={{ fontFamily: 'Arial, sans-serif', fontSize: '16px', lineHeight: '1.5', padding: '20px', maxHeight: '600px', overflowY: 'auto' }}>\n      <h2 style={{ textAlign: 'center', marginBottom: '20px', alignSelf: 'flex-start' }}>Letter from {person}</h2>\n      {lines.map((line, index) => (\n        // Render each line as a separate <p> tag with proper indentation\n        <p key={index} style={{ textIndent: '30px', margin: '10px 0', whiteSpace: 'pre-wrap' }}>{line}</p>\n      ))}\n    </div>\n  );\n};\n\nexport default LetterViewer;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EAC7C,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAEtDC,SAAS,CAAC,MAAM;IACd;IACA,MAAMS,kBAAkB,GAAG,MAAAA,CAAA,KAAY;MACrC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,kBAAkB,GAAGP,QAAQ,GAAG,MAAM,CAAC,CAAC,CAAC;QACtE,MAAMQ,IAAI,GAAG,MAAMF,QAAQ,CAACE,IAAI,CAAC,CAAC;QAClCJ,gBAAgB,CAACI,IAAI,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACxD;IACF,CAAC;IAEDJ,kBAAkB,CAAC,CAAC,CAAC,CAAC;EACxB,CAAC,EAAE,CAACL,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMW,KAAK,GAAGR,aAAa,CAACS,KAAK,CAAC,IAAI,CAAC;EAEvC,oBACEd,OAAA;IAAKe,KAAK,EAAE;MAAEC,UAAU,EAAE,mBAAmB;MAAEC,QAAQ,EAAE,MAAM;MAAEC,UAAU,EAAE,KAAK;MAAEC,OAAO,EAAE,MAAM;MAAEC,SAAS,EAAE,OAAO;MAAEC,SAAS,EAAE;IAAO,CAAE;IAAAC,QAAA,gBAC3ItB,OAAA;MAAIe,KAAK,EAAE;QAAEQ,SAAS,EAAE,QAAQ;QAAEC,YAAY,EAAE,MAAM;QAAEC,SAAS,EAAE;MAAa,CAAE;MAAAH,QAAA,GAAC,cAAY,EAACnB,MAAM;IAAA;MAAAD,QAAA,EAAAwB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC3Gf,KAAK,CAACgB,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK;IAAA;IACrB;IACA/B,OAAA;MAAee,KAAK,EAAE;QAAEiB,UAAU,EAAE,MAAM;QAAEC,MAAM,EAAE,QAAQ;QAAEC,UAAU,EAAE;MAAW,CAAE;MAAAZ,QAAA,EAAEQ;IAAI,GAArFC,KAAK;MAAA7B,QAAA,EAAAwB,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAoF,CAClG,CAAC;EAAA;IAAA1B,QAAA,EAAAwB,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACxB,EAAA,CA9BIH,YAAY;AAAAkC,EAAA,GAAZlC,YAAY;AAgClB,eAAeA,YAAY;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}